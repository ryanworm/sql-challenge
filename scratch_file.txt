-- CREATE TABLE departments (
-- 	dept_no VARCHAR(30) NOT NULL,
-- 	dept_name VARCHAR(30) NOT NULL,
-- 	PRIMARY KEY (dept_no)
-- );


-- CREATE TABLE titles (
-- 	title_id VARCHAR(30) NOT NULL,
-- 	title VARCHAR(30) NOT NULL,
-- 	PRIMARY KEY(title_id) 
-- );

-- CREATE TABLE employees (
-- 	emp_no INT NOT NULL, 
-- 	emp_title_id VARCHAR(30) NOT NULL, 
-- 	birth_date VARCHAR(30) NOT NULL,
-- 	first_name VARCHAR(30) NOT NULL,
-- 	last_name VARCHAR(30) NOT NULL, 
-- 	sex VARCHAR(10) NOT NULL,
-- 	hire_date VARCHAR(12) NOT NULL,
-- 	FOREIGN KEY(emp_title_id) REFERENCES titles (title_id),
-- 	PRIMARY KEY(emp_no)
-- );

-- ALTER TABLE employees 
-- ADD birtH_date VARCHAR(30);

-- CREATE TABLE emp (
-- 	emp_no INT NOT NULL,
-- 	dept_no VARCHAR(30) NOT NULL,
-- 	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
-- 	FOREIGN KEY (dept_no) REFERENCES departments (dept_no)
-- );

-- CREATE TABLE managers (
-- 	dept_no VARCHAR(30) NOT NULL,
-- 	emp_no INT NOT NULL,
-- 	FOREIGN KEY (dept_no) REFERENCES departments (dept_no),
-- 	FOREIGN KEY (emp_no) REFERENCES employees (emp_no)
-- );

-- CREATE TABLE salaries (
-- 	emp_no INT NOT NULL,
-- 	salary INT NOT NULL,
-- 	FOREIGN KEY (emp_no) REFERENCES employees (emp_no)
-- );

-- List the following details of each employee:
-- employee number, last name, first name, sex, and salary.

-- -- -- QUESTION 1
-- SELECT employees.emp_no, employees.first_name, employees.last_name, employees.sex, salaries.salary
-- FROM  employees
-- INNER JOIN salaries ON employees.emp_no = salaries.emp_no;

-- -- -- QUESTION 2 
-- List first name, last name, and hire date for employees who were hired in 1986.
-- SELECT first_name, last_name, hire_date 
-- FROM employees 
-- WHERE hire_date LIKE '%1986%'; 

-- -- -- QUESTION 3
-- List the manager of each department with the following information:
-- department number, department name, the manager's employee number, last name, first name.
-- SELECT managers.emp_no, managers.dept_no, departments.dept_name, employees.first_name, employees.last_name
-- FROM managers
-- LEFT JOIN departments ON managers.dept_no = departments.dept_no
-- INNER JOIN employees ON managers.emp_no = employees.emp_no;

-- -- -- QUESTION 4
-- List the department of each employee with the following information: 
-- employee number, last name, first name, and department name.

-- SELECT emp.emp_no, departments.dept_name, employees.first_name, employees.last_name
-- FROM emp
-- LEFT JOIN departments ON emp.dept_no = departments.dept_no
-- INNER JOIN employees ON emp.emp_no = employees.emp_no;

-- -- -- QUESTION 5 
-- List first name, last name, and sex for employees whose
-- first name is "Hercules" and last names begin with "B."

-- SELECT first_name, last_name, sex 
-- FROM employees
-- WHERE first_name = 'Hercules' AND last_name LIKE 'B%';

-- -- -- QUESTION 6
-- List all employees in the Sales department, including their employee number, lamst nae, first name, and department name.

-- SELECT emp.emp_no, departments.dept_name, employees.first_name, employees.last_name
-- FROM emp
-- LEFT JOIN departments ON emp.dept_no = departments.dept_no
-- INNER JOIN employees ON employees.emp_no = emp.emp_no
-- WHERE departments.dept_name = 'Sales';

-- -- -- -- QUESTION 7
-- -- List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.
-- SELECT emp.emp_no, departments.dept_name, employees.first_name, employees.last_name
-- FROM emp
-- LEFT JOIN departments ON emp.dept_no = departments.dept_no
-- INNER JOIN employees ON employees.emp_no = emp.emp_no
-- WHERE departments.dept_name = 'Sales'
-- OR departments.dept_name = 'Development';

-- -- -- QUESTION 8
-- In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.

-- SELECT  last_name, COUNT(last_name) 
-- FROM employees
-- GROUP BY last_name
-- ORDER BY COUNT(last_name) DESC;

SELECT * 
FROM pg_settings
WHERE name = 'port';
